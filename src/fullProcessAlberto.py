from virusTotal import *
from asmFeatures import *
from hexFeatures import *
from peFeatures import *

from checkPeFiles import *
from acra_tools import *
from files import *
from csvs import *

def preprocessingData(malwareDirectory):
    # Hashing files to sha256
    filesToSha256(malwareDirectory)
    print("Hashing files Done!")
    # Remove files without Pe Header
    removeFilesNo32bits(malwareDirectory)
    print("Remove files without PE Header Done!")

def setupConfigurationFolders(malwareFolder="MalwareFolder/"):
    virusTotalFolder = "/LUSTRE/users/aredondo/MalwareDetectionVersions/MalwareDetectionMpi/VirusTotal/"
    datasetDirectory = "/LUSTRE/users/aredondo/MalwareDetectionVersions/MalwareDetectionMpi/VirusFiles/"
    apiFile = "/LUSTRE/users/aredondo/MalwareDetectionVersions/MalwareDetectionMpi/src/APIs.txt"
    #malwareFolder = "MalwareFolder/"
    #malwareFolder = "Exp2Obfuscated/" # Remember to put / at the end
    malwareDirectory = datasetDirectory+malwareFolder
    
    # outputDirectory = "/LUSTRE/users/aredondo/MalwareDetectionVersions/MalwareDetectionMpi/Output/"
    # outputDirectory = "/LUSTRE/users/aredondo/MalwareDetectionVersions/MalwareDetectionMpi/Output2/"
    # outputDirectory = "/LUSTRE/users/aredondo/MalwareDetectionVersions/MalwareDetectionMpi/Output3/"
    # outputDirectory = "/LUSTRE/users/aredondo/MalwareDetectionVersions/MalwareDetectionMpi/Output4/"
    outputDirectory = "/LUSTRE/users/aredondo/MalwareDetectionVersions/MalwareDetectionMpi/Output5/"
    asmOutput = outputDirectory+"AsmOutput/"
    hexOutput = outputDirectory+"HexOutput/"
    peOutput  = outputDirectory+"PeOutput/"
    expOutput = outputDirectory+"ExpOutput/"
    
    # tempFolder = "/LUSTRE/users/aredondo/MalwareDetectionVersions/MalwareDetectionMpi/Temp/"
    # tempFolder = "/LUSTRE/users/aredondo/MalwareDetectionVersions/MalwareDetectionMpi/Temp2/"
    # tempFolder = "/LUSTRE/users/aredondo/MalwareDetectionVersions/MalwareDetectionMpi/Temp3/"
    # tempFolder = "/LUSTRE/users/aredondo/MalwareDetectionVersions/MalwareDetectionMpi/Temp4/"
    tempFolder = "/LUSTRE/users/aredondo/MalwareDetectionVersions/MalwareDetectionMpi/Temp5/"
    asmFolder = tempFolder+"Asm/"
    hexFolder = tempFolder+"Hex/"
    filesWithoutPeHeader = tempFolder+"FilesWithoutPeHeader/"
    
    return virusTotalFolder,datasetDirectory,apiFile,malwareFolder,malwareDirectory,outputDirectory, asmOutput,hexOutput,peOutput,expOutput,tempFolder,asmFolder,hexFolder,filesWithoutPeHeader


def convertFiles(malwareDirectory,asmFolder,hexFolder):
    # asm format
    convertBinaryFilesToAsm(malwareDirectory,asmFolder)
    # hex format
    convertBinaryFilesToByte(malwareDirectory,hexFolder)
    
def getStaticFeatures(malwareDirectory,apiFile,asmFolder,hexFolder,asmOutput,hexOutput,peOutput):
    # asm
    getAsmFeatures(apiFile,asmFolder,asmOutput)
    # hex
    getHexFeatures(hexFolder,hexOutput)
    # pe
    getPeFeatures(malwareDirectory,peOutput)

def createCsvStatic(outputDirectory,apiFile,asmOutput,hexOutput,peOutput):
    # asm
    createAsmCsv(asmOutput,apiFile,outputDirectory)
    # hex
    createHexCsv(hexOutput,outputDirectory)
    # pe
    createPeCsv(peOutput,outputDirectory)
    # merge
    # mergeStatic(outputDirectory)

def createCsvExperiments(totalExperiments,expOutput,outputFolder, headerType):
    createExpCsv(totalExperiments,expOutput,outputFolder, headerType)



      
