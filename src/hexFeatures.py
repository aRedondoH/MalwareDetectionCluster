import os as os
import os.path
from csv import writer
import math
import numpy as np
from joblib import Parallel, delayed
import multiprocessing
import subprocess
import math
            
# Convert binaries to .byte (hexadecimal)
def convertBinaryFilesToByte(virus_dir,output_hex_dir):
    print("Converting binary files to byte...")
    params = [str(virus_dir),str(output_hex_dir)]
    args = ['qsub','hexdump.sub'] + params
    output = subprocess.Popen(args,stdout=subprocess.PIPE).stdout.read()
    print("Output: ",output)
    
# Hex feature extraction for the .byte files
def getHexFeatures(hexFolder,hexOutput):
    print("Getting hex features...")
    
    tfiles = os.listdir(hexFolder)
    byte_files = [i for i in tfiles if '.byte' in i]
    numberOfHexFiles = len(byte_files)

    defaultCores=16
    cores = defaultCores
    if numberOfHexFiles<cores:
        loopCuts=1
        cores=numberOfHexFiles
    else:
        loopCuts = int(math.ceil(numberOfHexFiles/cores))

    countLoopProcessed = 0
    sumToRank = 0
    for i in range(loopCuts):
        print("Loop: ", countLoopProcessed)
        if numberOfHexFiles<cores:
            cores=numberOfHexFiles
        if i>0:
            sumToRank+=defaultCores
        
        fout = str(hexOutput)+str(i)+".txt"
        params = [str(cores),str(sumToRank),hexFolder,hexOutput,fout]
        args = ['qsub','hex.sub'] + params
        output = subprocess.Popen(args,stdout=subprocess.PIPE).stdout.read()
        print("Output: ",output)
        countLoopProcessed+=1
        numberOfHexFiles-=defaultCores
