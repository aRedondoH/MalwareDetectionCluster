#!/usr/bin/env python
import os, os.path
import sys
import pandas as pd
from pathlib import Path
from classifiers import *
import shutil
from mpi4py import MPI

def miniExp(i,pathOutput,pathCsvTemp,csvFile):
    df = pd.read_csv(pathOutput+"staticDynamicWithLabels.csv")
    numberOfRows = int(df.shape[0])
    numberOfRowsTest=round((numberOfRows*20)/100)
    testSubset = df.sample(n=numberOfRowsTest)
    trainSubset = df.drop(testSubset.index)
    testCsv = pathCsvTemp+"featuresCsvTestWithLabels"+str(i)+".csv"
    testSubset.to_csv(testCsv, index=False)
    trainCsv = pathCsvTemp+"featuresCsvTrainWithLabels"+str(i)+".csv"
    trainSubset.to_csv(trainCsv, index=False)    
    # Data standarization
    trainDataStandarizedWithLabels,testDataStandarizedWithLabels = dataStandarization(pathOutput,trainCsv, testCsv)
    # Classification
    checkClassificationAlgorithms(trainDataStandarizedWithLabels,testDataStandarizedWithLabels, pathOutput, i, csvFile)


def expCrossValidated():

    comm = MPI.COMM_WORLD
    rank = int(comm.Get_rank())
    nprocs = comm.Get_size()
    sumToRank = int(sys.argv[1])
    expOutput = sys.argv[2]
    outputDirectory = sys.argv[3]
    csvExp = sys.argv[4]
    rank+=sumToRank
    print("Rank: ", rank)
    
    dataDf = pd.read_csv(outputDirectory+csvExp)
    X_data, y_data= dataDf.iloc[:,1:-1],dataDf.iloc[:,-1]
    X_data = dataStandarization(X_data)
    results = classifyCrossValidated(X_data,y_data,rank)
    
    # Write features to .csv file
    individualOutputCsv = expOutput+"exp_"+str(rank)+".csv"
    with open(individualOutputCsv, 'a') as f:
        fw = writer(f)
        fw.writerow(results)
        f.close()

expCrossValidated()

