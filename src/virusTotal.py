import os as os
from csv import writer
import json
import os.path
import time
import glob
import pandas as pd

# Generate virus total report .json based on hash (md5, sha256)
def generateVtJsonReport(virusTotalFolder, virusFolder,reportFolder):
    files = [os.path.join(virusFolder,fi) for fi in os.listdir(virusFolder)]
    commandVT = "python "+virusTotalFolder+"vt_driver.py file-report "
    filesInString = ''
    countTemp = 0
    x = 0 # number of files to report (4 per minute)
    counterTemp = 0
    for fil in files:
        fileBasename = os.path.basename(fil)
        filesInString = filesInString + ' ' + fileBasename + ' '
        if x == 4:
            commandToRun = commandVT + filesInString + ' > '+reportFolder+'/reportVT_'+ str(countTemp-x)+'_'+str(countTemp)+'.json'
            print(commandToRun)
            os.system(commandToRun)
            filesInString = ''
            x = 0
            time.sleep(60)
        countTemp += 1
        x += 1
        counterTemp += 1
        print("From: ",counterTemp, " of ", len(files))
    commandToRun = commandVT + filesInString + ' > '+reportFolder+'/reportVT_'+ str(countTemp-x)+'_'+str(len(files))+'.json'
    os.system(commandToRun)

def vtReportToCsv(reportFolder,csvOutput):
    # Read all .json reports, get hash and label and create csv output 
    os.chdir(reportFolder)
    cols = ['filename','label'] # write out the column names.
    fop = open(csvOutput, 'w') # Open csv to write
    csv_wouter = writer(fop)
    csv_wouter.writerow(cols)
    counter = 0
    outlines = []
    for file in glob.glob("*.json"):
        print("File: ", file)
        with open(file,"r") as f:
            data = f.read().replace('\n','')
        j = json.loads(data)
        if type(j["results"])==list:
            for virusFile in j["results"]:
                if int(virusFile["response_code"])==1:
                    malware_file_name = str(virusFile["resource"])
                    if int(virusFile["positives"])>20:
                        malware_label = str(1)
                    else:
                        malware_label = str(0)
                    outlines.append([malware_file_name, malware_label])
                    print(malware_file_name,malware_label)
        else: # often when the .json has only one response
            malware_file_name= str(j["results"]["resource"])
            if int(virusFile["response_code"])==1:
                if int(virusFile["positives"])>20:
                    malware_label = str(1)
                else:
                    malware_label = str(0)
                outlines.append([malware_file_name, malware_label])
                print(malware_file_name,malware_label)
    csv_wouter.writerows(outlines)
    fop.close()

def getBinaryLabelFromVirusTotal(virusTotalFolder,malwareDirectory,reportFolder,outputDirectory):
    print("Getting labels from virus total...")
    #2.1 Get labels and write to csv
    csvOutput = outputDirectory+"VtLabels.csv"
    generateVtJsonReport(virusTotalFolder,malwareDirectory,reportFolder)
    vtReportToCsv(reportFolder,csvOutput)
    print("Get labels from virus total Done!")


def createArtLables(datasetDirectory,outputDirectory):

    malwareFolder = datasetDirectory+"ObfuscatedMalware"
    benignFolder = datasetDirectory+"BenignFiles"
    csvOutput = outputDirectory+"vtLabels.csv"
    
    fop = open(csvOutput, 'w')
    csv_wouter = writer(fop)
    cols = ['filename','label'] # write out the column names
    csv_wouter.writerow(cols)

    # Benign 
    files = [os.path.join(benignFolder,fi) for fi in os.listdir(benignFolder)]
    listOfNamesandLabels = []
    for fil in files:
        fileName = os.path.basename(fil)
        fileLabel=str(0)
        listOfNamesandLabels.append([fileName, fileLabel])
        print(fileName,fileLabel)
    csv_wouter.writerows(listOfNamesandLabels)

    # Malware
    files = [os.path.join(malwareFolder,fi) for fi in os.listdir(malwareFolder)]
    listOfNamesandLabels = []
    for fil in files:
        fileName = os.path.basename(fil)
        fileLabel=str(1)
        listOfNamesandLabels.append([fileName, fileLabel])
        print(fileName,fileLabel)
    csv_wouter.writerows(listOfNamesandLabels)
    fop.close()

def createArtLabelsFromCsv(inputCsv,benignOrMalware):

    df = pd.read_csv(inputCsv)
    if benignOrMalware==0: # benign
        df['label']=0
    if benignOrMalware==1: # malware
        df['label']=1
        
    df.to_csv(inputCsv)
        
        
